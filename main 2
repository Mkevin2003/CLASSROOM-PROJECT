#include <iostream>
#include <string>
#include <vector>

using namespace std;

const int NUM_CLASSROOMS = 18;

struct Classroom {
    string section;
    bool occupied;
    vector<string> history;
};

void initializeClassrooms(Classroom classrooms[]) {
    for (int i = 0; i < NUM_CLASSROOMS; i++) {
        classrooms[i].section = "";
        classrooms[i].occupied = false;
    }
}

void displayClassroomStatus(const Classroom classrooms[], bool showOccupiedOnly) {
    cout << "Classroom Status:" << endl;
    for (int i = 0; i < NUM_CLASSROOMS; i++) {
        if (classrooms[i].occupied || !showOccupiedOnly) {
            string roomNumber;
            if (i < 4) {
                roomNumber = to_string(i + 101);
            } else if (i < 8) {
                roomNumber = to_string(i + 197);
            } else if (i == 8) {
                roomNumber = "CE LAB";
            } else if (i == 9) {
                roomNumber = "CL";
            } else if (i == 10) {
                roomNumber = "ML";
            } else if (i < 14) {
                roomNumber = "SL" + to_string(i - 10);
            } else if (i == 14) {
                roomNumber = "IT LAB";
            } else if (i == 15) {
                roomNumber = "401";
            } else if (i == 16) {
                roomNumber = "402";
            } else {
                roomNumber = "403";
            }
            cout << "|================|" << endl;
            cout << "|      Room      |" << roomNumber << ": ";
            if (classrooms[i].occupied) {
                cout << "Occupied by block section " << classrooms[i].section;
            } else {
                cout << "Unoccupied";
            }
            cout << endl;
        }
    }
    cout << "|================|" << endl;
    cout << endl;
}

void setOccupied(Classroom classrooms[], const string& section, int room) {
    if ((room >= 101 && room <= 104) || (room >= 201 && room <= 203) || room == 208 || room == 209 || room == 210 || (room >= 214 && room <= 217) || room == 231 || (room >= 401 && room <= 403)) {
        int index = room - 101;
        if (classrooms[index].occupied) {
            char choice;
            cout << "Room " << room << " is currently occupied. What do you want to do?" << endl;
            cout << "1. Unoccupy the room" << endl;
            cout << "2. Keep it occupied" << endl;
            cout << "Enter your choice: ";
            cin >> choice;
            if (choice == '1') {
                classrooms[index].history.push_back(classrooms[index].section);
                classrooms[index].section = "";
                classrooms[index].occupied = false;
                cout << "Room " << room << " is now unoccupied." << endl;
            } else {
                cout << "Room " << room << " remains occupied by block section " << classrooms[index].section << endl;
            }
        } else {
            char choice;
            cout << "Room " << room << " is currently unoccupied. Do you want to occupy it? (y/n): ";
            cin >> choice;
            if (choice == 'y' || choice == 'Y') {
                classrooms[index].history.push_back(classrooms[index].section);
                classrooms[index].section = section;
                classrooms[index].occupied = true;
                cout << "Room " << room << " is now occupied by block section " << section << endl;
            } else {
                cout << "Room " << room << " remains unoccupied." << endl;
            }
        }
    } else {
        cout << "Invalid room number." << endl;
    }
}

int main() {
    Classroom classrooms[NUM_CLASSROOMS];
    initializeClassrooms(classrooms);

    cout << "+========================+" << endl;
    cout << "|   CLASSROOM MODIFICATION   |" << endl;
    cout << "+========================+" << endl;

    string section;
    int room;
    int choice;

    do {
        cout << "Menu:" << endl;
        cout << "1. Modify classroom occupancy" << endl;
        cout << "2. Show all classrooms" << endl;
        cout << "3. Show occupied classrooms" << endl;
        cout << "4. Unoccupy a classroom" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter the block section: ";
                cin >> section;

                cout << "Enter the room number: ";
                cin >> room;

                setOccupied(classrooms, section, room);
                break;
            case 2:
                displayClassroomStatus(classrooms, false);
                break;
            case 3:
                displayClassroomStatus(classrooms, true);
                break;
            case 4:
                cout << "Enter the room number to unoccupy: ";
                cin >> room;
                setOccupied(classrooms, "", room);
                break;
            case 5:
                cout << "Exiting the program..." << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
                break;
        }
    } while (choice != 5);

    return 0;
}
