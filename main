#include <iostream>
#include <string>
#include <vector>


const int NUM_CLASSROOMS = 10;

struct Classroom {
    std::string section;
    bool occupied;
};

void initializeClassrooms(Classroom classrooms[]) {
    for (int i = 0; i < NUM_CLASSROOMS; i++) {
        classrooms[i].section = "";
        classrooms[i].occupied = false;
    }
}

void displayClassroomStatus(const Classroom classrooms[]) {
    std::cout << "Classroom Status:" << std::endl;
    for (int i = 0; i < NUM_CLASSROOMS; i++) {
        std::cout<< "|======ROOM======|" << std::endl; 
        std::cout <<"|      Room      |" << i + 1 << ": "; 
        if (classrooms[i].occupied) {
            std::cout << "Occupied by block section " << classrooms[i].section ;
        } else {
            std::cout << "Unoccupied"  ;
        }
         std::cout<< std::endl; 
        std::cout<< "|================|" << std::endl;
        std::cout<< std::endl; 
       
    }
}

void setOccupied(Classroom classrooms[], const std::string& section, int room) {
    if (room >= 1 && room <= NUM_CLASSROOMS) {
        if (classrooms[room - 1].occupied) {
            char choice;
            std::cout << "Room " << room << " is already occupied. Do you want to unoccupy it? (y/n): ";
            std::cin >> choice;
            if (choice == 'y' || choice == 'Y') {
                classrooms[room - 1].section = "";
                classrooms[room - 1].occupied = false;
                std::cout << "Room " << room << " is now unoccupied." << std::endl;
            } else {
                std::cout << "Room " << room << " remains occupied by section " << classrooms[room - 1].section << std::endl;
            }
        } else {
            char choice;
            std::cout << "Room " << room << " is currently unoccupied. Do you want to occupy it? (y/n): ";
            std::cin >> choice;
            if (choice == 'y' || choice == 'Y') {
                classrooms[room - 1].section = section;
                classrooms[room - 1].occupied = true;
                std::cout << "Room " << room << " is now occupied by section " << section << std::endl;
            } else {
                std::cout << "Room " << room << " remains unoccupied." << std::endl;
            }
        }
    } else {
        std::cout << "Invalid room number." << std::endl;
    }
}

int main() {
    Classroom classrooms[NUM_CLASSROOMS];
    initializeClassrooms(classrooms);

      std::cout<< "     |========================|" << std::endl; 
      std::cout<< "     |CLASSROOM MODIFICATION  |" << std::endl; 
     std:: cout<< "     |========================|" << std::endl;
    displayClassroomStatus(classrooms);

    std::string section;
    int room;
    char choice;

    do {
        std::cout << "Enter the block section : ";
        std::cin >> section;

        std::cout << "Enter the room number  : ";
        std::cin >> room;

        setOccupied(classrooms, section, room);

        std::cout << "Do you want to modify another classroom? (y/n): ";
        std::cin >> choice;
    } while (choice == 'y' || choice == 'Y');

    displayClassroomStatus(classrooms);

    return 0;
}
